name: CI (Test and Docker build and push)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SECRET_KEY_ADMIN: ${{ secrets.SECRET_KEY_ADMIN }}
      SECRET_KEY_EMAIL: ${{ secrets.SECRET_KEY_EMAIL }}
      SECRET_KEY_BOT: ${{ secrets.SECRET_KEY_BOT }}
      S3_HOST: ${{ secrets.S3_HOST }}
      S3_BACKET: ${{ secrets.S3_BACKET }}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      MAIL_FROM: ${{ secrets.MAIL_FROM }}
      MAIL_PORT: ${{ secrets.MAIL_PORT }}
      MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
      RMQ_HOST: ${{ secrets.RMQ_HOST }}
      RMQ_PORT: ${{ secrets.RMQ_PORT }}
      RMQ_PLAGIN_PORT: ${{ secrets.RMQ_PLAGIN_PORT }}
      RMQ_USER: ${{ secrets.RMQ_USER }}
      RMQ_PASSWORD: ${{ secrets.RMQ_PASSWORD }}
      GRAFANA_USER: ${{ secrets.GRAFANA_USER }}
      GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: ${{ secrets.RMQ_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.RMQ_PASSWORD }}
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.0"

      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Запуск тестов с pytest
        run: pytest -c pytest.ini -v

      - name: Проверка кода с flake8
        run: |
          pip install flake8
          flake8 . --count --max-line-length=80 --statistics --config=tests/.flake8

  docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Вход в Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Сборка и пуш Docker образа
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/fastfood-api:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fastfood-api:latest