name: CI (Test and Docker build and push)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
        ports:
          - "5432:5432"

      redis:
        image: redis:7
        ports:
          - "6379:6379"

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ожидание запуска БД и Redis
        run: sleep 10

      - name: Запуск тестов с pytest
        env:
          SERVER_HOST: "app"
          SERVER_PORT: "8000"
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SECRET_KEY_ADMIN: ${{ secrets.SECRET_KEY_ADMIN }}
          SECRET_KEY_EMAIL: ${{ secrets.SECRET_KEY_EMAIL }}
          SECRET_KEY_BOT: ${{ secrets.SECRET_KEY_BOT }}
          S3_HOST: ${{ secrets.S3_HOST }}
          S3_BACKET: ${{ secrets.S3_BACKET }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: "postgres"
          DB_PORT: "5432"
          DB_NAME: ${{ secrets.DB_NAME }}
          REDIS_HOST: "redis"
          REDIS_PORT: "6379"
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          RMQ_HOST: "rabbitmq"
          RMQ_PORT: "5672"
          RMQ_PLAGIN_PORT: "15672"
          RMQ_USER: ${{ secrets.RMQ_USER }}
          RMQ_PASSWORD: ${{ secrets.RMQ_PASSWORD }}
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_HOST: "postgres"
          TEST_DB_PORT: "5432"
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_REDIS_HOST: "redis"
          TEST_REDIS_PORT: "6379"
        run: python -m pytest -v

      - name: Проверка кода с flake8
        run: flake8 .

  docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Клонирование репозитория
        uses: actions/checkout@v4

      - name: Вход в Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Сборка и пуш Docker образа
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/fastfood-api:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/fastfood-api:latest